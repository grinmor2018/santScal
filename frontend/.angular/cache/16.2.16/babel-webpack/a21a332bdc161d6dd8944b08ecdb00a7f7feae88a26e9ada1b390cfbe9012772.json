{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/snack-bar\";\nclass CandidateService {\n  constructor(http, snackBar) {\n    this.http = http;\n    this.snackBar = snackBar;\n    this.apiUrl = 'http://localhost:3000/candidates';\n    this.candidatesSubject = new BehaviorSubject([]);\n    this.candidates$ = this.candidatesSubject.asObservable();\n  }\n  // Get the current list of candidates\n  getCandidates() {\n    return this.candidates$;\n  }\n  // Upload the form with the Excel file for processing\n  uploadCandidate(formData) {\n    return this.http.post(this.apiUrl, formData).pipe(tap(newCandidate => {\n      const currentCandidates = this.candidatesSubject.value;\n      this.candidatesSubject.next([...currentCandidates, newCandidate]);\n    }));\n  }\n  static {\n    this.ɵfac = function CandidateService_Factory(t) {\n      return new (t || CandidateService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.MatSnackBar));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CandidateService,\n      factory: CandidateService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { CandidateService };","map":{"version":3,"names":["BehaviorSubject","tap","CandidateService","constructor","http","snackBar","apiUrl","candidatesSubject","candidates$","asObservable","getCandidates","uploadCandidate","formData","post","pipe","newCandidate","currentCandidates","value","next","i0","ɵɵinject","i1","HttpClient","i2","MatSnackBar","factory","ɵfac","providedIn"],"sources":["H:\\Diskettes\\Feina\\BancoSantanderScaliant\\Codigo\\candidatos-app\\frontend\\src\\app\\services\\candidate.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\nimport { Candidate } from '../models/candidate.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CandidateService {\n  private apiUrl = 'http://localhost:3000/candidates';\n  private candidatesSubject = new BehaviorSubject<Candidate[]>([]);\n  candidates$ = this.candidatesSubject.asObservable();\n\n  constructor(private http: HttpClient, private snackBar: MatSnackBar) {}\n\n  // Get the current list of candidates\n  getCandidates(): Observable<Candidate[]> {\n    return this.candidates$;\n  }\n\n  // Upload the form with the Excel file for processing\n  uploadCandidate(formData: FormData): Observable<Candidate> {\n    return this.http.post<Candidate>(this.apiUrl, formData).pipe(\n      tap((newCandidate) => {\n        const currentCandidates = this.candidatesSubject.value;\n        this.candidatesSubject.next([...currentCandidates, newCandidate]);\n      })\n    );\n  }\n}\n\n"],"mappings":"AAGA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;;;;AAGvD,MAGaC,gBAAgB;EAK3BC,YAAoBC,IAAgB,EAAUC,QAAqB;IAA/C,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,QAAQ,GAARA,QAAQ;IAJ9C,KAAAC,MAAM,GAAG,kCAAkC;IAC3C,KAAAC,iBAAiB,GAAG,IAAIP,eAAe,CAAc,EAAE,CAAC;IAChE,KAAAQ,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;EAEmB;EAEtE;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACF,WAAW;EACzB;EAEA;EACAG,eAAeA,CAACC,QAAkB;IAChC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAY,IAAI,CAACP,MAAM,EAAEM,QAAQ,CAAC,CAACE,IAAI,CAC1Db,GAAG,CAAEc,YAAY,IAAI;MACnB,MAAMC,iBAAiB,GAAG,IAAI,CAACT,iBAAiB,CAACU,KAAK;MACtD,IAAI,CAACV,iBAAiB,CAACW,IAAI,CAAC,CAAC,GAAGF,iBAAiB,EAAED,YAAY,CAAC,CAAC;IACnE,CAAC,CAAC,CACH;EACH;;;uBApBWb,gBAAgB,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAAhBtB,gBAAgB;MAAAuB,OAAA,EAAhBvB,gBAAgB,CAAAwB,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA;;SAEPzB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}