{"ast":null,"code":"import { BehaviorSubject, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CandidateService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/candidates';\n    this.candidatesSubject = new BehaviorSubject([]);\n    this.candidates$ = this.candidatesSubject.asObservable();\n  }\n  // Obtener la lista actual de candidatos\n  getCandidates() {\n    return this.candidates$;\n  }\n  // Subir el formulario con el Excel para procesamiento\n  uploadCandidate(formData) {\n    return this.http.post(this.apiUrl, formData).pipe(tap(newCandidate => {\n      const currentCandidates = this.candidatesSubject.value;\n      this.candidatesSubject.next([...currentCandidates, newCandidate]);\n    }));\n  }\n  static {\n    this.ɵfac = function CandidateService_Factory(t) {\n      return new (t || CandidateService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CandidateService,\n      factory: CandidateService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { CandidateService };","map":{"version":3,"names":["BehaviorSubject","tap","CandidateService","constructor","http","apiUrl","candidatesSubject","candidates$","asObservable","getCandidates","uploadCandidate","formData","post","pipe","newCandidate","currentCandidates","value","next","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["H:\\Diskettes\\Feina\\BancoSantanderScaliant\\Codigo\\candidatos-app\\frontend\\src\\app\\services\\candidate.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { Candidate } from '../models/candidate.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CandidateService {\r\n  private apiUrl = 'http://localhost:3000/candidates';\r\n  private candidatesSubject = new BehaviorSubject<Candidate[]>([]);\r\n  candidates$ = this.candidatesSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Obtener la lista actual de candidatos\r\n  getCandidates(): Observable<Candidate[]> {\r\n    return this.candidates$;\r\n  }\r\n\r\n  // Subir el formulario con el Excel para procesamiento\r\n  uploadCandidate(formData: FormData): Observable<Candidate> {\r\n    return this.http.post<Candidate>(this.apiUrl, formData).pipe(\r\n      tap((newCandidate) => {\r\n        const currentCandidates = this.candidatesSubject.value;\r\n        this.candidatesSubject.next([...currentCandidates, newCandidate]);\r\n      })\r\n    );\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,eAAe,EAAcC,GAAG,QAAQ,MAAM;;;AAGvD,MAGaC,gBAAgB;EAK3BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,MAAM,GAAG,kCAAkC;IAC3C,KAAAC,iBAAiB,GAAG,IAAIN,eAAe,CAAc,EAAE,CAAC;IAChE,KAAAO,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;EAEZ;EAEvC;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACF,WAAW;EACzB;EAEA;EACAG,eAAeA,CAACC,QAAkB;IAChC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAY,IAAI,CAACP,MAAM,EAAEM,QAAQ,CAAC,CAACE,IAAI,CAC1DZ,GAAG,CAAEa,YAAY,IAAI;MACnB,MAAMC,iBAAiB,GAAG,IAAI,CAACT,iBAAiB,CAACU,KAAK;MACtD,IAAI,CAACV,iBAAiB,CAACW,IAAI,CAAC,CAAC,GAAGF,iBAAiB,EAAED,YAAY,CAAC,CAAC;IACnE,CAAC,CAAC,CACH;EACH;;;uBApBWZ,gBAAgB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAhBnB,gBAAgB;MAAAoB,OAAA,EAAhBpB,gBAAgB,CAAAqB,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA;;SAEPtB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}